import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.SpringLayout;
import javax.swing.SwingConstants;

public class More {
	JFrame frame;
	JPanel panel;
	JButton queue;
	JButton schedul;
	public  More(AddNewDownload and)
	{
		frame=new JFrame("More setting");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frame.setPreferredSize(new Dimension(300, 230));
		
		panel=new JPanel();
		
		
		queue=new JButton("Queue");
		schedul=new JButton("Schedual");
		
		
		
		
		
		queue.setBorderPainted(true);
		schedul.setBorderPainted(true);
		
		queue.setForeground(Color.WHITE);
		schedul.setForeground(Color.WHITE);
		
		
		queue.setBackground(Color.BLACK);
		schedul.setBackground(Color.BLACK);
		
		
		queue.setFont(new Font("Arial", Font.ITALIC, 20));
		schedul.setFont(new Font("Arial", Font.ITALIC, 20));
		
		
		queue.setHorizontalAlignment(SwingConstants.CENTER);
		schedul.setHorizontalAlignment(SwingConstants.CENTER);

		
		panel.add(queue);
		panel.add(schedul);
		
		
		
		SpringLayout layout=new SpringLayout();
		layout.putConstraint(SpringLayout.EAST, queue, 0, SpringLayout.EAST, panel);
		layout.putConstraint(SpringLayout.WEST, queue, 0, SpringLayout.WEST, panel);
		layout.putConstraint(SpringLayout.NORTH, queue, 0, SpringLayout.NORTH, panel);
		queue.setPreferredSize(new Dimension(0, 100));
		
		layout.putConstraint(SpringLayout.EAST, schedul, 0, SpringLayout.EAST, panel);
		layout.putConstraint(SpringLayout.WEST, schedul, 0, SpringLayout.WEST, panel);
		layout.putConstraint(SpringLayout.NORTH, schedul, 0, SpringLayout.SOUTH, queue);
		layout.putConstraint(SpringLayout.SOUTH, schedul, 0, SpringLayout.SOUTH, panel);
		
		panel.setLayout(layout);
		
		queue.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				Queue q1=new Queue(and);
				q1.show();
				
			}
		});
		schedul.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				JFrame frame1;
				
				JPanel panelAdress;
				JPanel panelFile;
				JPanel panelButton;
				JPanel opening;
				JPanel totalPanel;
				JPanel radioPanel;
				
				JLabel textOfAddress;
				JLabel textOfFile;
				JLabel openingtext;
				
				
				JButton download1;
				
				
				JTextField address;
				JTextField file;
				JRadioButton item1;
				JRadioButton item2;
				
				ButtonGroup group;
				
				frame1=new JFrame("Schedul");
				frame1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				frame1.setPreferredSize(new Dimension(900, 300));
					
					panelAdress=new JPanel();
					panelFile=new JPanel();
					panelButton=new JPanel();
					opening=new JPanel();
					totalPanel=new JPanel();
					radioPanel=new JPanel();
					group=new ButtonGroup();
					
					
					item1=new JRadioButton("Date");
					item2=new JRadioButton("Time");
					
					radioPanel.add(item1);
					radioPanel.add(item2);
					group.add(item1);
					group.add(item2);
					textOfAddress=new JLabel("Address");
					textOfAddress.setEnabled(false);
					textOfFile=new JLabel("File");
					textOfFile.setEnabled(false);
					address=new JTextField();
					address.setFont(new Font("Arial", Font.PLAIN, 20));
					file=new JTextField();
					file.setText("/home/paml");
					file.setFont(new Font("Arial", Font.PLAIN, 20));
					
					
					
					
					
					
					download1=new JButton("ADD");
					download1.setBorderPainted(true);
					download1.setForeground(Color.WHITE);
					download1.setBackground(Color.BLACK);
					download1.setFont(new Font("Arial", Font.ITALIC, 20));
					download1.setHorizontalAlignment(SwingConstants.CENTER);
					
					
					openingtext=new JLabel("ADD TO SCHEDUL");
					openingtext.setForeground(Color.WHITE);
					openingtext.setHorizontalAlignment(SwingConstants.CENTER);
					openingtext.setFont(new Font("Arial", Font.ITALIC, 20));
					openingtext.setEnabled(false);
					opening.add(openingtext);
					
					panelButton.add(download1);
					panelAdress.add(address);
					panelFile.add(file);
					panelAdress.add(textOfAddress);
					panelFile.add(textOfFile);

					item1.addItemListener(new ItemListener() {
						
						public void itemStateChanged(ItemEvent arg0) {
							if (item1.isSelected())
							{
								System.out.println("sssssssssssssssssssssswqeqweqweqwe");
								JFrame frame3;
								frame3=new JFrame("Schedule");
								frame3.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
								frame3.setPreferredSize(new Dimension(500, 700));
								JLabel textOfDate=new JLabel("Please enter the Time");
								textOfDate.setHorizontalAlignment(SwingConstants.CENTER);
								JButton accept=new JButton("Add");

								
								
								JLabel ts=new JLabel("Day");
								JLabel tm=new JLabel("Mounth");
								JLabel th=new JLabel("Year");
								
								
								TextField s=new TextField();
								TextField m=new TextField();
								TextField h=new TextField();
								
								
								JPanel ps=new JPanel();
								JPanel pm=new JPanel();
								JPanel ph=new JPanel();
								JPanel button=new JPanel();
								button.add(accept);
								
								
								ps.add(ts);
								ps.add(s);
								
								
								pm.add(tm);
								pm.add(m);
								
								
								ph.add(th);
								ph.add(h);
								
								
								
								JPanel panelx=new JPanel();
								panelx.add(ps);
								panelx.add(pm);
								panelx.add(ph);
								panelx.add(button);
								frame3.add(panelx);

								SpringLayout layouts=new SpringLayout();
								

								layouts.putConstraint(SpringLayout.WEST, ts, 20, SpringLayout.WEST, ps);
								ts.setPreferredSize(new Dimension(80, 40));
								ts.setFont(new Font("Arial", Font.ITALIC, 20));
								layouts.putConstraint(SpringLayout.WEST, s, 10, SpringLayout.EAST, ts);
								layouts.putConstraint(SpringLayout.EAST, s, -10, SpringLayout.EAST, ps);
								s.setPreferredSize(new Dimension(0, 40));
								ps.setLayout(layouts);
								
								SpringLayout layoutm=new SpringLayout();
								

								layoutm.putConstraint(SpringLayout.WEST, tm, 20, SpringLayout.WEST, pm);
								tm.setPreferredSize(new Dimension(80, 40));
								tm.setFont(new Font("Arial", Font.ITALIC, 20));
								layoutm.putConstraint(SpringLayout.WEST, m, 10, SpringLayout.EAST, tm);
								layoutm.putConstraint(SpringLayout.EAST, m, -10, SpringLayout.EAST, pm);
								m.setPreferredSize(new Dimension(0, 40));
								pm.setLayout(layoutm);
								
								
								SpringLayout layouth=new SpringLayout();
								

								layouth.putConstraint(SpringLayout.WEST, th, 20, SpringLayout.WEST, ph);
								th.setPreferredSize(new Dimension(80, 40));
								th.setFont(new Font("Arial", Font.ITALIC, 20));
								layouth.putConstraint(SpringLayout.WEST, h, 10, SpringLayout.EAST, th);
								layouth.putConstraint(SpringLayout.EAST, h, -10, SpringLayout.EAST, ph);
								h.setPreferredSize(new Dimension(0, 40));
								ph.setLayout(layouth);
								
								JPanel openingx=new JPanel();
								openingx.add(textOfDate);
								SpringLayout layoutOpenning=new SpringLayout();
								layoutOpenning.putConstraint(SpringLayout.EAST, textOfDate, 0, SpringLayout.EAST, openingx);
								layoutOpenning.putConstraint(SpringLayout.WEST, textOfDate, 0, SpringLayout.WEST, openingx);
								layoutOpenning.putConstraint(SpringLayout.NORTH, textOfDate, 0, SpringLayout.NORTH, openingx);
								layoutOpenning.putConstraint(SpringLayout.SOUTH, textOfDate, 0, SpringLayout.SOUTH, openingx);
								openingx.setLayout(layoutOpenning);
								panelx.add(openingx);
								
								SpringLayout layoutb=new SpringLayout();
								layoutb.putConstraint(SpringLayout.EAST, accept, 0, SpringLayout.EAST, button);
								layoutb.putConstraint(SpringLayout.WEST, accept, 0, SpringLayout.WEST, button);
								layoutb.putConstraint(SpringLayout.NORTH, accept, 0, SpringLayout.NORTH, button);
								layoutb.putConstraint(SpringLayout.SOUTH, accept, 0, SpringLayout.SOUTH, button);
								button.setLayout(layoutb);
								
								
								
								
								
								SpringLayout layout=new SpringLayout();
								
								
								layout.putConstraint(SpringLayout.NORTH, openingx, 0, SpringLayout.NORTH, panelx);
								layout.putConstraint(SpringLayout.EAST, openingx, 0, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, openingx, 0, SpringLayout.WEST, panelx);
								openingx.setPreferredSize(new Dimension(0, 50));
								
								
								
								
								layout.putConstraint(SpringLayout.EAST, ps, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, ps, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, ps, 35, SpringLayout.SOUTH, openingx);
								ps.setPreferredSize(new Dimension(0, 50));
								
								
								layout.putConstraint(SpringLayout.EAST, pm, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, pm, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, pm, 35, SpringLayout.SOUTH, ps);
								pm.setPreferredSize(new Dimension(0, 50));
								
								
								layout.putConstraint(SpringLayout.EAST, ph, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, ph, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, ph, 35, SpringLayout.SOUTH, pm);
								ph.setPreferredSize(new Dimension(0, 50));
								
								layout.putConstraint(SpringLayout.EAST, button, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, button, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, button, 35, SpringLayout.SOUTH, ph);
								button.setPreferredSize(new Dimension(0, 50));
								accept.addActionListener(new ActionListener() {
									public void actionPerformed(ActionEvent arg0) {
										{
												int sec;
												int mo;
												int ho;
												if (s.getText().isEmpty()==true)
												{
													sec=0;
												}
												else
												{
													sec=Integer.parseInt(s.getText());
												}
												if (m.getText().isEmpty()==true)
												{
													mo=0;
												}
												else
												{
													mo=Integer.parseInt(m.getText());
												}
												if (h.getText().isEmpty()==true)
												{
													ho=0;
												}
												else
												{
													ho=Integer.parseInt(h.getText());
												}
												if (sec>=0 && sec<=60 && mo>=0 && mo<=60 && ho>=0 && ho<=12)
												{
													System.out.println("yes");
													PlanDate tt=new PlanDate(address.getText(), file.getText(), sec, mo, ho);
													try {
														Plan.addDate(tt);
													} catch (IOException e) {
														// TODO Auto-generated catch block
														e.printStackTrace();
													}
												}
												else
												{
													JOptionPane.showMessageDialog(null, "Wrong input","Alert",JOptionPane.WARNING_MESSAGE);
												}
												s.setText(null);
												m.setText(null);
												h.setText(null);
											}
									}
								});
								
								panelx.setLayout(layout);
								frame3.pack();
								frame3.setVisible(true);
							}
						}});
					radioPanel.setBackground(Color.BLACK);
					item2.addItemListener(new ItemListener() {
						
						public void itemStateChanged(ItemEvent arg0) {
							if (item2.isSelected()==true)
							{
								JFrame frame3;
								frame3=new JFrame("Schedule");
								frame3.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
								frame3.setPreferredSize(new Dimension(500, 700));
								JLabel textOfDate=new JLabel("Please enter the Time");
								textOfDate.setHorizontalAlignment(SwingConstants.CENTER);
								JButton accept=new JButton("Add");

								
								
								JLabel ts=new JLabel("Second");
								JLabel tm=new JLabel("Minute");
								JLabel th=new JLabel("Hour");
								
								
								TextField s=new TextField();
								TextField m=new TextField();
								TextField h=new TextField();
								
								
								JPanel ps=new JPanel();
								JPanel pm=new JPanel();
								JPanel ph=new JPanel();
								JPanel button=new JPanel();
								button.add(accept);
								
								
								ps.add(ts);
								ps.add(s);
								
								
								pm.add(tm);
								pm.add(m);
								
								
								ph.add(th);
								ph.add(h);
								
								
								
								JPanel panelx=new JPanel();
								panelx.add(ps);
								panelx.add(pm);
								panelx.add(ph);
								panelx.add(button);
								frame3.add(panelx);

								SpringLayout layouts=new SpringLayout();
								

								layouts.putConstraint(SpringLayout.WEST, ts, 20, SpringLayout.WEST, ps);
								ts.setPreferredSize(new Dimension(80, 40));
								ts.setFont(new Font("Arial", Font.ITALIC, 20));
								layouts.putConstraint(SpringLayout.WEST, s, 10, SpringLayout.EAST, ts);
								layouts.putConstraint(SpringLayout.EAST, s, -10, SpringLayout.EAST, ps);
								s.setPreferredSize(new Dimension(0, 40));
								ps.setLayout(layouts);
								
								SpringLayout layoutm=new SpringLayout();
								

								layoutm.putConstraint(SpringLayout.WEST, tm, 20, SpringLayout.WEST, pm);
								tm.setPreferredSize(new Dimension(80, 40));
								tm.setFont(new Font("Arial", Font.ITALIC, 20));
								layoutm.putConstraint(SpringLayout.WEST, m, 10, SpringLayout.EAST, tm);
								layoutm.putConstraint(SpringLayout.EAST, m, -10, SpringLayout.EAST, pm);
								m.setPreferredSize(new Dimension(0, 40));
								pm.setLayout(layoutm);
								
								
								SpringLayout layouth=new SpringLayout();
								

								layouth.putConstraint(SpringLayout.WEST, th, 20, SpringLayout.WEST, ph);
								th.setPreferredSize(new Dimension(80, 40));
								th.setFont(new Font("Arial", Font.ITALIC, 20));
								layouth.putConstraint(SpringLayout.WEST, h, 10, SpringLayout.EAST, th);
								layouth.putConstraint(SpringLayout.EAST, h, -10, SpringLayout.EAST, ph);
								h.setPreferredSize(new Dimension(0, 40));
								ph.setLayout(layouth);
								
								JPanel openingx=new JPanel();
								openingx.add(textOfDate);
								SpringLayout layoutOpenning=new SpringLayout();
								layoutOpenning.putConstraint(SpringLayout.EAST, textOfDate, 0, SpringLayout.EAST, openingx);
								layoutOpenning.putConstraint(SpringLayout.WEST, textOfDate, 0, SpringLayout.WEST, openingx);
								layoutOpenning.putConstraint(SpringLayout.NORTH, textOfDate, 0, SpringLayout.NORTH, openingx);
								layoutOpenning.putConstraint(SpringLayout.SOUTH, textOfDate, 0, SpringLayout.SOUTH, openingx);
								openingx.setLayout(layoutOpenning);
								panelx.add(openingx);
								
								SpringLayout layoutb=new SpringLayout();
								layoutb.putConstraint(SpringLayout.EAST, accept, 0, SpringLayout.EAST, button);
								layoutb.putConstraint(SpringLayout.WEST, accept, 0, SpringLayout.WEST, button);
								layoutb.putConstraint(SpringLayout.NORTH, accept, 0, SpringLayout.NORTH, button);
								layoutb.putConstraint(SpringLayout.SOUTH, accept, 0, SpringLayout.SOUTH, button);
								button.setLayout(layoutb);
								
								
								
								
								
								SpringLayout layout=new SpringLayout();
								
								
								layout.putConstraint(SpringLayout.NORTH, openingx, 0, SpringLayout.NORTH, panelx);
								layout.putConstraint(SpringLayout.EAST, openingx, 0, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, openingx, 0, SpringLayout.WEST, panelx);
								openingx.setPreferredSize(new Dimension(0, 50));
								
								
								
								
								layout.putConstraint(SpringLayout.EAST, ps, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, ps, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, ps, 35, SpringLayout.SOUTH, openingx);
								ps.setPreferredSize(new Dimension(0, 50));
								
								
								layout.putConstraint(SpringLayout.EAST, pm, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, pm, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, pm, 35, SpringLayout.SOUTH, ps);
								pm.setPreferredSize(new Dimension(0, 50));
								
								
								layout.putConstraint(SpringLayout.EAST, ph, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, ph, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, ph, 35, SpringLayout.SOUTH, pm);
								ph.setPreferredSize(new Dimension(0, 50));
								
								layout.putConstraint(SpringLayout.EAST, button, -10, SpringLayout.EAST, panelx);
								layout.putConstraint(SpringLayout.WEST, button, 10, SpringLayout.WEST, panelx);
								layout.putConstraint(SpringLayout.NORTH, button, 35, SpringLayout.SOUTH, ph);
								button.setPreferredSize(new Dimension(0, 50));
								accept.addActionListener(new ActionListener() {
									public void actionPerformed(ActionEvent arg0) {
										{
												int sec;
												int mo;
												int ho;
												if (s.getText().isEmpty()==true)
												{
													sec=0;
												}
												else
												{
													sec=Integer.parseInt(s.getText());
												}
												if (m.getText().isEmpty()==true)
												{
													mo=0;
												}
												else
												{
													mo=Integer.parseInt(m.getText());
												}
												if (h.getText().isEmpty()==true)
												{
													ho=0;
												}
												else
												{
													ho=Integer.parseInt(h.getText());
												}
												if (sec>=0 && sec<=60 && mo>=0 && mo<=60 && ho>=0 && ho<=12)
												{
													System.out.println("yes");
													PlanTime tt=new PlanTime(address.getText(), file.getText(), sec, mo, ho);
													try {
														Plan.addTime(tt);
													} catch (IOException e) {
														// TODO Auto-generated catch block
														e.printStackTrace();
													}
												}
												else
												{
													JOptionPane.showMessageDialog(null, "Wrong input","Alert",JOptionPane.WARNING_MESSAGE);
												}
												s.setText(null);
												m.setText(null);
												h.setText(null);
											}
									}
								});
								
								panelx.setLayout(layout);
								frame3.pack();
								frame3.setVisible(true);
							}
						}
					});
					
					totalPanel.add(panelAdress);
					totalPanel.add(panelButton);
					totalPanel.add(panelFile);
					totalPanel.add(opening);
					totalPanel.add(radioPanel);
					
					
										
					
					SpringLayout layoutFrame=new SpringLayout();
					SpringLayout layoutFile=new SpringLayout();
					SpringLayout layoutButton=new SpringLayout();
					SpringLayout layoutOpenning=new SpringLayout();
					SpringLayout layoutAddress=new SpringLayout();
					SpringLayout layoutRadio=new SpringLayout();
					

					
					
					layoutAddress.putConstraint(SpringLayout.WEST, textOfAddress, 20, SpringLayout.WEST, panelAdress);
					textOfAddress.setPreferredSize(new Dimension(80, 40));
					textOfAddress.setFont(new Font("Arial", Font.ITALIC, 20));
					textOfAddress.setForeground(Color.white);
					layoutAddress.putConstraint(SpringLayout.WEST, address, 10, SpringLayout.EAST, textOfAddress);
					layoutAddress.putConstraint(SpringLayout.EAST, address, -10, SpringLayout.EAST, panelAdress);
					address.setPreferredSize(new Dimension(0, 40));
					panelAdress.setBackground(Color.BLACK);
					
					
					
					layoutFile.putConstraint(SpringLayout.WEST, textOfFile, 50, SpringLayout.WEST, panelFile);
					textOfFile.setPreferredSize(new Dimension(40, 40));
					textOfFile.setFont(new Font("Arial", Font.ITALIC, 20));
					textOfFile.setForeground(Color.white);
					layoutFile.putConstraint(SpringLayout.WEST, file, 18, SpringLayout.EAST, textOfFile);
					layoutFile.putConstraint(SpringLayout.EAST, file, -10, SpringLayout.EAST, panelFile);
					file.setPreferredSize(new Dimension(700, 40));
					panelFile.setBackground(Color.BLACK);
					
	
					
					
					layoutButton.putConstraint(SpringLayout.NORTH, download1, 0, SpringLayout.NORTH, panelButton);
					layoutButton.putConstraint(SpringLayout.SOUTH, download1, 0, SpringLayout.SOUTH, panelButton);
					layoutButton.putConstraint(SpringLayout.EAST, download1, 0, SpringLayout.EAST, panelButton);
					layoutButton.putConstraint(SpringLayout.WEST, download1, 0, SpringLayout.WEST, panelButton);
					
					
					layoutOpenning.putConstraint(SpringLayout.EAST, openingtext, 0, SpringLayout.EAST, opening);
					layoutOpenning.putConstraint(SpringLayout.WEST, openingtext, 0, SpringLayout.WEST, opening);
					layoutOpenning.putConstraint(SpringLayout.NORTH, openingtext, 0, SpringLayout.NORTH, opening);
					layoutOpenning.putConstraint(SpringLayout.SOUTH, openingtext, 0, SpringLayout.SOUTH, opening);
					
					
					layoutButton.putConstraint(SpringLayout.NORTH, download1, 0, SpringLayout.NORTH, panelButton);
					layoutButton.putConstraint(SpringLayout.SOUTH, download1, 0, SpringLayout.SOUTH, panelButton);
					layoutButton.putConstraint(SpringLayout.EAST, download1, 0, SpringLayout.EAST, panelButton);
					layoutButton.putConstraint(SpringLayout.WEST, download1, 0, SpringLayout.WEST, panelButton);
					
					
					
					layoutFrame.putConstraint(SpringLayout.NORTH, opening, 0, SpringLayout.NORTH, totalPanel);
					layoutFrame.putConstraint(SpringLayout.EAST, opening, 0, SpringLayout.EAST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.WEST, opening, 0, SpringLayout.WEST, totalPanel);
					opening.setPreferredSize(new Dimension(0, 50));
					opening.setBackground(Color.BLACK);
					
					
					
					
					
					
					
					layoutFrame.putConstraint(SpringLayout.NORTH, panelAdress, 0, SpringLayout.SOUTH, opening);
					layoutFrame.putConstraint(SpringLayout.EAST, panelAdress, 0, SpringLayout.EAST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.WEST, panelAdress, 0, SpringLayout.WEST, totalPanel);
					panelAdress.setPreferredSize(new Dimension(0, 50));
					
					
					
					
					
					layoutFrame.putConstraint(SpringLayout.NORTH, panelFile, 0, SpringLayout.SOUTH, panelAdress);
					layoutFrame.putConstraint(SpringLayout.EAST, panelFile, 0, SpringLayout.EAST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.WEST, panelFile, 0, SpringLayout.WEST, totalPanel);
					panelFile.setPreferredSize(new Dimension(0, 50));
					
					

					layoutFrame.putConstraint(SpringLayout.NORTH, radioPanel, 0, SpringLayout.SOUTH, panelFile);
					layoutFrame.putConstraint(SpringLayout.EAST, radioPanel, 0, SpringLayout.EAST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.WEST, radioPanel, 0, SpringLayout.WEST, totalPanel);
					radioPanel.setPreferredSize(new Dimension(0, 50));
					
					
					layoutFrame.putConstraint(SpringLayout.NORTH, panelButton, 0, SpringLayout.SOUTH, radioPanel);
					layoutFrame.putConstraint(SpringLayout.EAST, panelButton, 0, SpringLayout.EAST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.WEST, panelButton, 0, SpringLayout.WEST, totalPanel);
					layoutFrame.putConstraint(SpringLayout.SOUTH, panelButton, 0, SpringLayout.SOUTH, totalPanel);
					panelAdress.setLayout(layoutAddress);
					panelFile.setLayout(layoutFile);
					opening.setLayout(layoutOpenning);
					panelButton.setLayout(layoutButton);
					totalPanel.setLayout(layoutFrame);
							
					
					totalPanel.setBackground(Color.BLACK);
					frame1.add(totalPanel);
					//frame.setLayout(null);
					frame1.pack();
					frame1.setVisible(true);

			}
		});
	
		
		frame.add(panel);
		frame.pack();
	}
	public void show()
	{
		frame.setVisible(true);
	}
	
}
